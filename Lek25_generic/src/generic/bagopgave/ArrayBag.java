package generic.bagopgave;public class ArrayBag<T> implements Bag<T> {    private T[] bag;    private final int INITIAL_SIZE = 20;    private int entries;    public ArrayBag() {        bag = (T[]) new Object[INITIAL_SIZE];        entries = 0;    }    @Override    public int getCurrentSize() {        return entries;    }    @Override    public boolean isFull()    {        return getCurrentSize() == INITIAL_SIZE;    }    @Override    public boolean isEmpty()    {        return entries == 0;    }    @Override    public boolean add(T newEntry) {        bag[entries] = newEntry;        entries++;        return true;    }    @Override    public T remove() {        if (!isEmpty()) {            T deleted = bag[entries - 1];            bag[entries - 1] = null;            entries--;            return deleted;        } else {            return null;        }    }    @Override    public boolean remove(T anEntry) {        int i = 0;        while (i != getCurrentSize()) {            if (bag[i] == anEntry) {                bag[i] = null;                entries--;                return true;            } else {                i++;            }        }        return false;    }    @Override    public void clear() {        bag = (T[]) new Object[INITIAL_SIZE];        entries = 0;    }    @Override    public int getFrequencyOf(T anEntry) {        int counter = 0;        int i = 0;        if (isEmpty()){            return 0;        }        while (i != getCurrentSize()) {            if (bag[i] == anEntry) {                counter++;            }            i++;        }        return counter;    }    @Override    public boolean contains(T anEntry) {        int i = 0;        while (i != getCurrentSize()) {            if (bag[i] == anEntry) {                return true;            } else {                i++;            }        }        return false;    }    @Override    public T[] toArray() {        T[] array = (T[]) new Object[getCurrentSize()];        System.arraycopy(bag, 0, array, 0, array.length);        return array;    }}